{"version":"0.0.1","modules":{"Json/Encode":{"moduleName":"Json/Encode","items":[{"type":"adt","name":"Json","params":[]},{"type":"value","name":"null","signature":"Json"},{"type":"value","name":"bool","signature":"Fn(Bool) -> Json"},{"type":"value","name":"string","signature":"Fn(String) -> Json"},{"type":"value","name":"float","signature":"Fn(Float) -> Json"},{"type":"value","name":"int","signature":"Fn(Int) -> Json"},{"type":"value","name":"list","signature":"Fn(Fn(a) -> Json, List<a>) -> Json"},{"type":"value","name":"object","signature":"Fn(List<(String, Json)>) -> Json"}]},"Json/Decode":{"moduleName":"Json/Decode","items":[{"type":"adt","name":"Error","params":[],"variants":[{"name":"Failure","args":["String"]},{"name":"Field","args":["String","Error"]},{"name":"Index","args":["Int","Error"]},{"name":"OneOf","args":["List<Error>"]}]},{"type":"adt","name":"Decoder","params":["a"]},{"type":"value","name":"of","signature":"Fn(a) -> Decoder<a>"},{"type":"value","name":"fail","signature":"Fn(String) -> Decoder<a>"},{"type":"value","name":"null","signature":"Decoder<Unit>"},{"type":"value","name":"bool","signature":"Decoder<Bool>"},{"type":"value","name":"string","signature":"Decoder<String>"},{"type":"value","name":"int","signature":"Decoder<Int>"},{"type":"value","name":"float","signature":"Decoder<Float>"},{"type":"value","name":"field","signature":"Fn(String, Decoder<a>) -> Decoder<a>"},{"type":"value","name":"list","signature":"Fn(Decoder<a>) -> Decoder<List<a>>"},{"type":"value","name":"optional_field","signature":"Fn(String, Decoder<a>) -> Decoder<Option<a>>"},{"type":"value","name":"decode","signature":"Fn(Json, Decoder<a>) -> Result<a, Error>","docComment":" Run a decoder on a `Json` value\n"},{"type":"value","name":"parse_json","signature":"Fn(String) -> Result<Json, String>"},{"type":"value","name":"json","signature":"Decoder<Json>"},{"type":"value","name":"one_of","signature":"Fn(List<Decoder<a>>) -> Decoder<a>"},{"type":"value","name":"decode_string","signature":"Fn(String, Decoder<a>) -> Result<a, Error>","docComment":" Parse a string and decode its json content\n"},{"type":"value","name":"and_then","signature":"Fn(Decoder<a>, Fn(a) -> Decoder<b>) -> Decoder<b>"},{"type":"value","name":"map","signature":"Fn(Decoder<a>, Fn(a) -> b) -> Decoder<b>"}]},"Specs":{"moduleName":"Specs","items":[{"type":"value","name":"decode_tests","signature":"Test"},{"type":"value","name":"main","signature":"Task<Unit>"}]}}}